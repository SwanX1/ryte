<div class="admin-header">
  <h1>{{t "admin.user_management"}}</h1>
  <p>{{t "admin.manage_users"}}</p>
</div>

<div class="card admin-users-card">
  <div class="table-container">
    <table class="admin-table">
      <thead>
        <tr>
          <th>{{t "admin.id"}}</th>
          <th>{{t "admin.avatar"}}</th>
          <th>{{t "admin.username"}}</th>
          <th>{{t "admin.email"}}</th>
          <th>{{t "admin.role"}}</th>
          <th>{{t "admin.email_verified"}}</th>
          <th>{{t "admin.joined"}}</th>
          <th>{{t "admin.actions"}}</th>
        </tr>
      </thead>
      <tbody>
        {{#each users}}
          <tr data-user-id="{{this.id}}">
            <td>{{this.id}}</td>
            <td>
              <img src="{{this.avatar_url}}" alt="{{this.username}}'s avatar" class="user-avatar-small">
            </td>
            <td>
              <a href="/profile/{{this.id}}" class="user-link">{{this.username}}</a>
            </td>
            <td>{{this.email}}</td>
            <td>
              <span class="role-badge role-{{this.role}}">{{this.role}}</span>
            </td>
            <td>
              {{#if this.email_verified}}
                <span class="status-badge status-verified">{{t "admin.verified"}}</span>
              {{else}}
                <span class="status-badge status-unverified">{{t "admin.unverified"}}</span>
              {{/if}}
            </td>
            <td>{{localDate this.created_at}}</td>
            <td>
              <div class="action-buttons">
                <button class="btn btn-sm btn-view-logs" onclick="viewUserLogs({{this.id}}, '{{this.username}}')">{{t "admin.view_logs"}}</button>
                {{#unless (eq this.role 'administrator')}}
                  <button class="btn btn-sm btn-toggle-role" onclick="toggleUserRole({{this.id}}, '{{this.role}}', '{{this.username}}')">
                    {{#if (eq this.role 'moderator')}}
                      {{t "admin.remove_mod"}}
                    {{else}}
                      {{t "admin.make_mod"}}
                    {{/if}}
                  </button>
                {{/unless}}
              </div>
            </td>
          </tr>
        {{/each}}
      </tbody>
    </table>
  </div>
</div>

<!-- Audit Logs Modal -->
{{#> modal modal_id="audit-logs-modal"}}
  <h2>{{t "admin.audit_logs_for"}} <span id="logs-username"></span></h2>
  <div class="table-container">
    <table class="admin-table" id="audit-logs-table">
      <thead>
        <tr>
          <th>{{t "admin.action"}}</th>
          <th>{{t "admin.entity_type"}}</th>
          <th>{{t "admin.entity_id"}}</th>
          <th>{{t "admin.details"}}</th>
          <th>{{t "admin.date"}}</th>
        </tr>
      </thead>
      <tbody id="audit-logs-list">
        <tr>
          <td colspan="5" class="loading">{{t "admin.loading_logs"}}</td>
        </tr>
      </tbody>
    </table>
  </div>
{{/modal}}

<script>
  function viewUserLogs(userId, username) {
    const modal = document.getElementById('audit-logs-modal');
    const logsList = document.getElementById('audit-logs-list');
    const usernameSpan = document.getElementById('logs-username');
    
    usernameSpan.textContent = username;
    modal.classList.add('active');
    
    fetch(`/api/admin/user/${userId}/logs`)
      .then(res => res.json())
      .then(data => {
        if (data.logs && data.logs.length > 0) {
          const html = data.logs.map(log => `
            <tr>
              <td>
                <span class="log-action-badge">${log.action}</span>
              </td>
              <td>${log.entity_type}</td>
              <td>${log.entity_id || 'N/A'}</td>
              <td class="log-details-cell">${log.details}</td>
              <td>${new Date(log.created_at).toLocaleString()}</td>
            </tr>
          `).join('');
          logsList.innerHTML = html;
        } else {
          logsList.innerHTML = '<tr><td colspan="5" class="no-logs">{{t "admin.no_logs"}}</td></tr>';
        }
      })
      .catch(err => {
        console.error('Error loading audit logs:', err);
        logsList.innerHTML = '<tr><td colspan="5" class="error">{{t "admin.error_loading_logs"}}</td></tr>';
      });
  }

  function toggleUserRole(userId, currentRole, username) {
    const newRole = currentRole === 'moderator' ? 'registered' : 'moderator';
    const action = currentRole === 'moderator' ? '{{t "admin.confirm_remove_mod"}}' : '{{t "admin.confirm_make_mod"}}';
    
    if (!confirm(action)) {
      return;
    }
    
    fetch(`/api/admin/user/${userId}/role`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ role: newRole }),
      credentials: 'include'
    })
    .then(res => res.json())
    .then(data => {
      if (data.success) {
        // Reload the page to show updated roles
        window.location.reload();
      } else {
        alert('{{t "admin.error_updating_role" error="' + (data.error || 'Unknown error') + '"}}');
      }
    })
    .catch(err => {
      console.error('Error updating user role:', err);
      alert('{{t "admin.error_updating_role_generic"}}');
    });
  }
</script> 